#!/bin/sh

set -e

. /usr/share/debconf/confmodule

THIS_PACKAGE=octoscreen
DEFAULT_DISPLAY_MANAGER_FILE=/etc/X11/default-display-manager

# debconf is not a registry, so we only fiddle with the default file if
# the configure script requested an update
if [ -e $DEFAULT_DISPLAY_MANAGER_FILE.debconf-update ]; then
  rm -f $DEFAULT_DISPLAY_MANAGER_FILE.debconf-update
  if db_get shared/default-x-display-manager; then
    # workaround debconf passthru bug (#379198)
    if [ -z "$RET" ]; then
      RET="$THIS_PACKAGE"
    fi
    if [ "$THIS_PACKAGE" != "$RET" ]; then
      echo "Please be sure to run \"dpkg --configure $RET\"."
    fi
    if db_get "$RET"/daemon_name; then
      echo "$RET" > $DEFAULT_DISPLAY_MANAGER_FILE
    fi
  fi
fi

DEFAULT_SERVICE=/etc/systemd/system/display-manager.service
# set default-display-manager systemd service link according to our config
if [ "$1" = configure ] && [ -d /etc/systemd/system/ ]; then
  if [ -e "$DEFAULT_DISPLAY_MANAGER_FILE" ]; then
    SERVICE=/lib/systemd/system/$(basename $(cat "$DEFAULT_DISPLAY_MANAGER_FILE") | awk '{print tolower($0)}').service
    echo "Installing service $SERVICE"
    if [ -h "$DEFAULT_SERVICE" ] && [ $(readlink "$DEFAULT_SERVICE") = /dev/null ]; then
      echo "Display manager service is masked" >&2
    elif [ -e "$SERVICE" ]; then
      ln -sf "$SERVICE" "$DEFAULT_SERVICE"
      chmod +x /etc/octoscreen/disablescreenblank.sh
    else
      echo "WARNING: $SERVICE is the selected default display manager but does not exist" >&2
      rm -f "$DEFAULT_SERVICE"
    fi
  else
    rm -f "$DEFAULT_SERVICE"
  fi
fi

# Install the octoscreen Splash
if [ "$1" = configure ] && [ -f /lib/systemd/system/octosplash.service ]; then
  echo "Configuring OctoSplash Service"
  _fb=$(ls -1at /dev/fb* | grep -E "^/dev/fb[0-9]\$" | head -1)
  __fb=$(grep -oP "(?<=[[:space:]])(/dev/fb[0-9])(?=[[:space:]]*)\$" /lib/systemd/system/octosplash.service )
  if [ -z "$_fb" ] || [ -z "$__fb" ]; then
    echo "Unable to determine Frame Buffer, skipping"
  else
    if ! grep -qE "^\w*disable_splash=1\w*\$" /boot/config.txt; then
      echo "Dissabling default Raspberry Pi boot splash"
      echo "disable_splash=1" >> /boot/config.txt
    fi
    if [ "$_fb" != "$__fb" ]; then
      echo "Setting Frame Buffer to '$_fb'"
      sed -i "s~$__fb~$_fb~g" /lib/systemd/system/octosplash.service
    fi
    if grep -q 'tty1' /boot/cmdline.txt ; then
      echo "Redirecting boot messages and disabling cursor"
      sed -i 's/console=tty1/console=tty3 logo.nologo consoleblank=0 loglevel=1 quiet vt.global_cursor_default=0/g' /boot/cmdline.txt
    fi
  fi
fi

db_stop || true

#DEBHELPER#

exit 0
